简单工厂：(非标准的设计模式,经典)
    提供一个创建对象实例的功能,不需要关心其具体实现,被创建实例的类型可以是interface,abstract class,class
1.场景问题
    接口回顾:
        接口特殊抽象类,所有field都是constant,所有method都是abstract,只定义method,没有method的implement
        接口定义类的行为,具体的实现类实现接口约定的功能外,可按需实现其他功能
        不同的类可根据接口实现相同的行为
        接口的思想即封装隔离,
            封装指对被隔离体的行为(功能)的封装,
            隔离指外部调用与内部实现,外部调用即只能通过接口进行调用,外部调用与内部实现通过接口隔开
        接口vs抽象类:
            优先用接口
            既要定义子类的行为,又要为子类提供公共的功能时选抽象类
    面向接口编程
        三层架构,层与层之间通过接口进行通信,每一层有多个小模块,对外提供一个接口,通过接口调用某个模块的功能
    不用设计模式的解决方案及问题
2.解决方案
    简单工厂模式